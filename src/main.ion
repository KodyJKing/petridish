const
    {Matter} = import './'
    {Engine, Render, World, Bodies, Mouse, MouseConstraint, Constraint, Events, Composite} = Matter

const
    createBody(genome) ->
        console.log('')

    removeBody(world, body) ->
        Composite.remove(world, body)
        for constraint in world.constraints
            if constraint.bodyA is body or constraint.bodyB is body
                Composite.remove(world, constraint)

export ->
    let WIDTH = window.innerWidth
    let HEIGHT = window.innerHeight
    let HALFWIDTH = WIDTH / 2
    let HALFHEIGHT = HEIGHT / 2

    let engine = Engine.create()
    let world = engine.world
    let render = Render.create(..)
        engine: engine
        element: document.body
        options:
            width: WIDTH
            height: HEIGHT
            wireframes: false
            showAngleIndicator: true
            background: '#e3e7ed'

    window.engine = engine
    window.world = world
    window.render = render
    window.Matter = Matter

    world.gravity.y = 0

    let boxA = Bodies.circle(..)
        HALFWIDTH - 100, HALFHEIGHT, 40
        {}
            frictionAir: 0.05
            render:
                fillStyle: '#bf9661'

    let boxB = Bodies.circle(..)
        HALFWIDTH + 100, HALFHEIGHT, 40
        {}
            frictionAir: 0.05
            render:
                fillStyle: '#bf9661'

    window.r = -> removeBody(world, boxA)

    let constraint = Constraint.create(..)
        bodyA: boxA
        bodyB: boxB
        pointA: { x: 40, y: 0 }
        pointB: { x: -40, y: 0 }
        stiffness: 0.01

    # add all of the bodies to the world
    World.add(world, [boxA, boxB, constraint])

    let mouse = Mouse.create(render.canvas)
    World.add(..)
        world, MouseConstraint.create(..)
            engine
            {mouse}
                constraint:
                    stiffness: 0.2
                    render: {visible: false}

    # run the engine
    Engine.run(engine)

    # run the renderer
    Render.run(render)