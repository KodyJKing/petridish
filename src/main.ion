const
    {Matter} = import './'
    {Engine, Render, World, Bodies, Mouse, MouseConstraint, Constraint, Events, Composite} = Matter


const
    createCreature(genome) ->
        let result = Composite.create()

        for let i = 0; i < 1; i++
            let circle = Bodies.circle(..)
                0, 0, 40
                {}
                    frictionAir: 0.05
                    render:
                        fillStyle: '#bf9661'

            Composite.add(result, circle)

        return result

    removeBody(composite, body) ->
        Composite.remove(composite, body)
        for constraint in composite.constraints
            if constraint.bodyA is body or constraint.bodyB is body
                Composite.remove(composite, constraint)

export ->
    let
        WIDTH = window.innerWidth
        HEIGHT = window.innerHeight
        HALFWIDTH = WIDTH / 2
        HALFHEIGHT = HEIGHT / 2

        engine = Engine.create()
        world = engine.world
        render = Render.create(..)
            engine: engine
            element: document.body
            options:
                width: WIDTH
                height: HEIGHT
                wireframes: false
                showAngleIndicator: true
                background: '#e3e7ed'

        mouse = Mouse.create(render.canvas)

    world.gravity.y = 0

    World.add(..)
        world, MouseConstraint.create(..)
            engine
            {mouse}
                constraint:
                    stiffness: 0.2
                    render: {visible: false}

    let creature = createCreature()
    Composite.translate(creature, { x: HALFWIDTH, y: HALFHEIGHT })
    World.add(world, creature)

    # run the engine
    Engine.run(engine)

    # run the renderer
    Render.run(render)