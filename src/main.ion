const
    {Matter, Creature} = import './'
    {Engine, Render, World, Bodies, Mouse, MouseConstraint, Composite, Events} = Matter

export ->
    let
        PADDING = 10
        WIDTH = window.innerWidth - PADDING * 2
        HEIGHT = window.innerHeight - PADDING * 2
        HALFWIDTH = WIDTH / 2
        HALFHEIGHT = HEIGHT / 2

        engine = Engine.create()
        world = engine.world
        render = Render.create(..)
            engine: engine
            element: document.body
            options:
                width: WIDTH
                height: HEIGHT
                wireframes: false
                showAngleIndicator: true
                background: '#595959'

        mouse = Mouse.create(render.canvas)

    world.gravity.y = 0

    Engine.run(engine)
    Render.run(render)

    World.add(..)
        world, MouseConstraint.create(..)
            engine, {}
                constraint: { stiffness: 0.1, damping: 0.1, render: {visible: true} }
                mouse: mouse

    #  Walls
    let wallOpt = { isStatic: true, render: { fillStyle: '#383830' } }
    World.add(..)
        world
        []
            Bodies.rectangle(..)
                0,         HALFHEIGHT, 60,    HEIGHT, wallOpt
            Bodies.rectangle(..)
                WIDTH,     HALFHEIGHT, 60,    HEIGHT, wallOpt
            Bodies.rectangle(..)
                HALFWIDTH, 0,          WIDTH, 60,     wallOpt
            Bodies.rectangle(..)
                HALFWIDTH, HEIGHT,     WIDTH, 60,     wallOpt

    # Creatures
    let creatures = []
        for let i = 0; i < 5; i++
            new Creature(world)

    for creature in creatures
        Composite.translate(creature.body, { x: WIDTH * Math.random(), y: HEIGHT * Math.random() })
        creature.add()

    #  Main loop
    let previousTime = performance.now()
    let maxDt = 500
    Events.on(..)
        engine, "afterUpdate"
        ->
            let currentTime = performance.now()
            let dt = Math.min(currentTime - previousTime, maxDt)
            previousTime = currentTime
            for creature in creatures
                creature.update(dt)