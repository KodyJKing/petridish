const
    {Matter} = import './'
    {Engine, World, Body, Bodies, Constraint, Events, Composite} = Matter

#E6E6E6
#A6E22A

const
    cellSize = 32
    frictionAir = 0.05

const
    createCell(type, x, y) ->
        let body = Bodies.rectangle(..)
            x * cellSize, y * cellSize
            cellSize, cellSize
            {frictionAir}
                render:
                    fillStyle: cellTypes[type].color
        return body
            plugin:
                type: type
    
    cellTypes = {}
        r: # root
            color: '#E6E6E6'
            updateCell: (body, dt) ->
                Matter.Body.applyForce(body, body.position, {x: 0, y: 0.0001})          

export class Creature
    constructor: (world) ->
        @world = world
        @body = Composite.create()
        for let i = 0; i < 20; i++
            let cell = createCell('r', 0, 0)
            Composite.add(@body, cell)

    properties:
        add: ->
            World.add(@world, @body)
        remove: ->
            World.remove(@world, @body)
        update: (dt) ->
            for cell in Matter.Composite.allBodies(@body)
                cellTypes[cell.plugin.type].updateCell(cell, dt)